{"version":3,"sources":["timer.js","App.js","serviceWorker.js","index.js"],"names":["accurateInterval","fn","time","cancel","nextAt","timeout","wrapper","Date","getTime","setTimeout","clearTimeout","Container","react_default","a","createElement","id","this","props","titleId","title","decrementId","value","onClick","lengthId","length","incrementId","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setBreakLength","e","currentLength","state","breakLength","timerState","timerLabel","currentTarget","setState","timer","setSessionLength","sessionLength","timerDisplay","minutes","Math","floor","seconds","timerControl","beginCountdown","intervalID","timerCountdown","phaseControl","switchTimer","timeLeft","label","buzzer","audioBeep","play","reset","pause","currentTime","_this2","Fragment","className","App_Container","preload","src","ref","audio","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.078a3e58.chunk.js","sourcesContent":["/*\n  Accurate_Interval.js by Squeege and modified by Peter Weinberg\n  https://codepen.io/no_stack_dub_sack/pen/VKJGKd?editors=1010 \n*/\n\nfunction accurateInterval(fn, time){\n  let cancel, nextAt, timeout, wrapper\n  nextAt = new Date().getTime() + time\n  wrapper = () => {\n    nextAt += time\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime())\n    return fn()\n  }\n  cancel = () => { \n    return clearTimeout(timeout) \n  }\n  timeout = setTimeout(wrapper, nextAt - new Date().getTime())\n  return { cancel: cancel }\n}\n\nexport default accurateInterval;","import React, { Component } from 'react';\nimport './App.css';\nimport accurateInterval from './timer';\n\nclass Container extends Component {\n  render() {\n    return (\n      <div>\n        <div id={this.props.titleId}>{this.props.title}</div>\n        <button id={this.props.decrementId} value=\"-\" onClick={this.props.onClick}> - </button>\n        <div id={this.props.lengthId}>{this.props.length}</div>\n        <button id={this.props.incrementId} value=\"+\" onClick={this.props.onClick}> + </button>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      timerLabel: \"Session\",\n      timerState: \"stopped\",\n      timer: 1500,\n      intervalID: \"\"\n    };\n  }\n\n  setBreakLength = (e) => {\n    let currentLength = this.state.breakLength;\n    if (this.state.timerState === \"running\") return;\n    if (this.state.timerLabel === \"Session\") {\n      if (e.currentTarget.value === \"-\" && currentLength !== 1) {\n        this.setState({ breakLength: currentLength - 1 });\n      } else if (e.currentTarget.value === \"+\" && currentLength !== 60) {\n        this.setState({ breakLength: currentLength + 1 });\n      }\n    } else {\n      if (e.currentTarget.value === \"-\" && currentLength !== 1) {\n        this.setState({ \n          breakLength: currentLength - 1,\n          timer: (currentLength * 60) - 60\n        });\n      } else if (e.currentTarget.value === \"+\" && currentLength !== 60) {\n        this.setState({ \n          breakLength: currentLength + 1,\n          timer: (currentLength * 60) + 60\n        });\n      }\n    }\n  }\n\n  setSessionLength = (e) => {\n    let currentLength = this.state.sessionLength;\n    if (this.state.timerState === \"running\") return;\n    if (this.state.timerLabel === \"Break\") {\n      if (e.currentTarget.value === \"-\" && currentLength !== 1) {\n        this.setState({ sessionLength: currentLength - 1 });\n      } else if (e.currentTarget.value === \"+\" && currentLength !== 60) {\n        this.setState({ sessionLength: currentLength + 1 });\n      }\n    } else {\n      if (e.currentTarget.value === \"-\" && currentLength !== 1) {\n        this.setState({ \n          sessionLength: currentLength - 1,\n          timer: (currentLength * 60) - 60\n        });\n      } else if (e.currentTarget.value === \"+\" && currentLength !== 60) {\n        this.setState({ \n          sessionLength: currentLength + 1,\n          timer: (currentLength * 60) + 60 \n        });\n      }\n    }\n  }\n\n  timerDisplay = () => {\n    let minutes = Math.floor(this.state.timer / 60);\n    let seconds = this.state.timer - (minutes * 60);\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    return minutes + \":\" + seconds;\n  }\n\n  timerControl = () => {\n    let control = this.state.timerState;\n    return control === \"stopped\" ? (\n      this.beginCountdown(),\n      this.setState({timerState: \"running\"})\n    ) : (\n      this.setState({timerState: \"stopped\"}),\n      this.state.intervalID && this.state.intervalID.cancel()\n    );\n  }\n\n  beginCountdown = () => {\n    this.setState({\n      intervalID: accurateInterval( () => {\n        this.timerCountdown();\n        this.phaseControl();\n      }, 1000)\n    });\n  }\n\n  timerCountdown = () => {\n    this.setState({timer: this.state.timer - 1});\n  }\n      \n  switchTimer = (timeLeft, label) => {\n    this.setState({\n      timer: timeLeft,\n      timerLabel: label\n    });\n  }\n\n  phaseControl = () => {\n    let timer = this.state.timer;\n    this.buzzer(timer);\n    if (timer < 0) {\n      return this.state.timerLabel === \"Session\" ? (\n        this.state.intervalID && this.state.intervalID.cancel(),\n        this.beginCountdown(),\n        this.switchTimer(this.state.breakLength * 60, \"Break\")\n        ) : (\n        this.state.intervalID && this.state.intervalID.cancel(),\n        this.beginCountdown(),\n        this.switchTimer(this.state.sessionLength * 60, \"Session\")\n        );\n      }\n  }\n\n  buzzer = (timer) => {\n    if (timer === 0) {\n      this.audioBeep.play();\n    }\n  }\n  \n  reset = () => {\n    this.setState({\n      breakLength: 5,\n      sessionLength: 25,\n      timerLabel: \"Session\",\n      timerState: \"stopped\",\n      timer: 1500,\n      intervalID: \"\"\n    });\n    this.state.intervalID && this.state.intervalID.cancel();\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n  }\n      \n  render() {\n    return (\n      <React.Fragment>\n      <div className=\"App\">\n        <h1>Pomodoro Clock</h1>\n        <Container\n          titleId=\"break-label\"\n          lengthId=\"break-length\"\n          title=\"Break Length\"\n          decrementId=\"break-decrement\"\n          incrementId=\"break-increment\"\n          length={this.state.breakLength}\n          onClick={this.setBreakLength}\n        /><br/>\n        \n        <Container\n          titleId=\"session-label\"\n          lengthId=\"session-length\"\n          title=\"Session Length\"\n          decrementId=\"session-decrement\"\n          incrementId=\"session-increment\"\n          length={this.state.sessionLength}\n          onClick={this.setSessionLength}\n        /><br/>\n        \n        <div id=\"timer-label\">\n          {this.state.timerLabel}\n        </div>\n        <div id=\"time-left\">\n          <h1>{this.timerDisplay()}</h1>\n        </div>\n        <button id=\"start_stop\" onClick={this.timerControl}> start/stop </button>\n        <button id=\"reset\" onClick={this.reset}> reset </button>\n      </div>\n\n      <audio \n        id=\"beep\"\n        preload=\"auto\" \n        src=\"https://goo.gl/65cBl1\"\n        ref={ (audio) => {this.audioBeep = audio;} } \n      />\n\n    </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}